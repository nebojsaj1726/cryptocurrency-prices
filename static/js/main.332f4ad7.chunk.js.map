{"version":3,"sources":["store/actions/alertActions.ts","store/types.ts","components/Search.tsx","store/actions/coinActions.ts","components/Alert.tsx","components/Coin.tsx","App.tsx","store/reducers/coinReducer.ts","store/reducers/alertReducer.ts","store/index.ts","index.tsx"],"names":["setAlert","message","type","payload","Search","text","dispatch","useDispatch","useState","currsymbol","setCurrsymbol","className","onSubmit","e","preventDefault","trim","a","fetch","process","res","ok","Error","json","resData","getCoin","placeholder","style","maxWidth","height","value","onChange","currentTarget","margin","Alert","onClose","onClick","justifyContent","Coin","data","marginBottom","letterSpacing","name","alignItems","symbol","Math","round","price","toString","replace","delta_24h","market_cap","toFixed","total_volume_24h","App","coinData","useSelector","state","coin","loading","error","alertMsg","alert","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.332f4ad7.chunk.js","sourcesContent":["import { SET_ALERT, AlertAction } from \"../types\";\n\nexport const setAlert = (message: string): AlertAction => {\n  return {\n    type: SET_ALERT,\n    payload: message,\n  };\n};\n","export const GET_COIN = \"GET_WEATHER\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_ALERT = \"SET_ALERT\";\n\n// export interface Weather {\n//   description: string;\n//   icon: string;\n//   id: number;\n//   main: string;\n// }\n\nexport interface CoinData {\n  name: string;\n  symbol: string;\n  price: number;\n  delta_24h: number;\n  market_cap: number;\n  total_volume_24h: number;\n}\n\nexport interface CoinState {\n  data: CoinData | null;\n  loading: boolean;\n  error: string;\n}\n\ninterface GetCoinAction {\n  type: typeof GET_COIN;\n  payload: CoinData;\n}\n\ninterface SetLoadingAction {\n  type: typeof SET_LOADING;\n}\n\ninterface SetErrorAction {\n  type: typeof SET_ERROR;\n  payload: string;\n}\n\nexport type CoinAction = GetCoinAction | SetLoadingAction | SetErrorAction;\n\nexport interface AlertAction {\n  type: typeof SET_ALERT;\n  payload: string;\n}\n\nexport interface AlertState {\n  message: string;\n}\n","import React, { FC, useState, FormEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setAlert } from \"../store/actions/alertActions\";\nimport { getCoin, setLoading } from \"../store/actions/coinActions\";\n\ninterface SearchProps {\n  text: string;\n}\n\nconst Search: FC<SearchProps> = ({ text }) => {\n  const dispatch = useDispatch();\n  const [currsymbol, setCurrsymbol] = useState(\"\");\n\n  const changeHandler = (e: FormEvent<HTMLInputElement>) => {\n    setCurrsymbol(e.currentTarget.value);\n  };\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (currsymbol.trim() === \"\") {\n      return dispatch(setAlert(\"Cryptocurrency symbol is required\"));\n    }\n\n    dispatch(setLoading());\n    dispatch(getCoin(currsymbol));\n    setCurrsymbol(\"\");\n  };\n\n  return (\n    <div className=\"hero has-text-centered\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <form className=\"py-5\" onSubmit={submitHandler}>\n            <input\n              type=\"text\"\n              className=\"input has-text-centered has-background-dark has-text-light mb-4\"\n              placeholder={text}\n              style={{ maxWidth: 400, height: 50 }}\n              value={currsymbol}\n              onChange={changeHandler}\n            />\n            <button\n              className=\"button is-primary is-fullwidth\"\n              style={{ maxWidth: 400, height: 50, margin: \"0 auto\" }}\n            >\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"../index\";\nimport {\n  CoinAction,\n  CoinData,\n  GET_COIN,\n  SET_LOADING,\n  SET_ERROR,\n} from \"../types\";\n\nexport const getCoin = (\n  currsymbol: string\n): ThunkAction<void, RootState, null, CoinAction> => {\n  return async (dispatch) => {\n    try {\n      const res = await fetch(\n        `https://coinlib.io/api/v1/coin?key=${process.env.REACT_APP_API_KEY}&symbol=${currsymbol}`\n      );\n      if (!res.ok) {\n        throw new Error(\"Cryptocurrency not found\");\n      }\n\n      const resData: CoinData = await res.json();\n      dispatch({\n        type: GET_COIN,\n        payload: resData,\n      });\n    } catch (err) {\n      dispatch({\n        type: SET_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\nexport const setLoading = (): CoinAction => {\n  return {\n    type: SET_LOADING,\n  };\n};\n\nexport const setError = (): CoinAction => {\n  return {\n    type: SET_ERROR,\n    payload: \"\",\n  };\n};\n","import React, { FC } from \"react\";\n\ninterface AlertProps {\n  message: string;\n  onClose: () => void;\n}\n\nconst Alert: FC<AlertProps> = ({ message, onClose }) => {\n  return (\n    <div className=\"modal is-active has-text-centered\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head has-background-danger\">\n          <p className=\"modal-card-title has-text-white\">{message}</p>\n        </header>\n        <footer\n          className=\"modal-card-foot\"\n          style={{ justifyContent: \"center\" }}\n        >\n          <button className=\"button\" onClick={onClose}>\n            Close\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { FC } from \"react\";\nimport { CoinData } from \"../store/types\";\n\ninterface CoinProps {\n  data: CoinData;\n}\n\nconst Coin: FC<CoinProps> = ({ data }) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container has-text-light\">\n        <h1\n          className=\"title has-text-light\"\n          style={{ marginBottom: 50, letterSpacing: 1.4 }}\n        >\n          {data.name}\n        </h1>\n        <div className=\"level\" style={{ alignItems: \"flex-start\" }}>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading mb-3\">Symbol</p>\n              <p className=\"title is-4 has-text-light\">{data.symbol}</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading mb-3\">Price</p>\n              <div className=\"title is-4 has-text-light\">\n                <p>\n                  {Math.round(data.price)\n                    .toString()\n                    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                  $\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading mb-3\">Last 24h</p>\n              <p className=\"title is-4 has-text-light\">{data.delta_24h}%</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading mb-3\">Market Cap</p>\n              <p className=\"title is-4 has-text-light\">\n                {(data.market_cap / 1000000000).toFixed(2)}B\n              </p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading mb-3\">Volume 24h</p>\n              <p className=\"title is-4 has-text-light\">\n                {(data.total_volume_24h / 1000000).toFixed(2)}M\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Coin;\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\n\nimport { RootState } from \"./store\";\nimport Search from \"./components/Search\";\nimport Alert from \"./components/Alert\";\nimport Coin from \"./components/Coin\";\nimport { setAlert } from \"./store/actions/alertActions\";\nimport { setError } from \"./store/actions/coinActions\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const coinData = useSelector((state: RootState) => state.coin.data);\n  const loading = useSelector((state: RootState) => state.coin.loading);\n  const error = useSelector((state: RootState) => state.coin.error);\n  const alertMsg = useSelector((state: RootState) => state.alert.message);\n\n  return (\n    <div className=\"has-text-centered has-background-dark has-text-light\">\n      <Search text=\"Enter cryptocurrency symbol (BTC, ETH, USDT...)\" />\n      {loading ? (\n        <h2 className=\"is-size-3 py-2\">Loading...</h2>\n      ) : (\n        coinData && <Coin data={coinData} />\n      )}\n      {alertMsg && (\n        <Alert message={alertMsg} onClose={() => dispatch(setAlert(\"\"))} />\n      )}\n      {error && <Alert message={error} onClose={() => dispatch(setError())} />}\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  CoinState,\n  CoinAction,\n  GET_COIN,\n  SET_LOADING,\n  SET_ERROR,\n} from \"../types\";\n\nconst initialState: CoinState = {\n  data: null,\n  loading: false,\n  error: \"\",\n};\n\nexport default (state = initialState, action: CoinAction): CoinState => {\n  switch (action.type) {\n    case GET_COIN:\n      return {\n        data: action.payload,\n        loading: false,\n        error: \"\",\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { AlertState, AlertAction, SET_ALERT } from \"../types\";\n\nconst initialState: AlertState = {\n  message: \"\",\n};\n\nexport default (state = initialState, action: AlertAction): AlertState => {\n  switch (action.type) {\n    case SET_ALERT:\n      return {\n        message: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport coinReducer from \"./reducers/coinReducer\";\nimport alertReducer from \"./reducers/alertReducer\";\n\nconst rootReducer = combineReducers({\n  coin: coinReducer,\n  alert: alertReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}